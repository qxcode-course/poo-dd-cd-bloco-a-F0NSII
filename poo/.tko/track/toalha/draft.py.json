{
    "patches": [
        {
            "label": "2025-09-18_02-44-34",
            "content": "@@ -1,1378 +0,0 @@\n-class Towel:    #this%0A    def __init__(self, color: str, size: str): # constructor%0A        self.color: str = color # atributos%0A        self.size: str = size%0A        self.wetness: int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: # toString%0A        return f%22Cor:%7Bself.color%7D, Tam:%7Bself.size%7D, Umidade:%7Bself.wetness%7D%22%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    print(%22oi%22)%0A    while True:%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22Comando inv%C3%A1lido%22)%0A%0Amain()\n",
            "lines": "0"
        },
        {
            "label": "2025-09-29_16-18-43",
            "content": "@@ -1,8 +1,29 @@\n+@@ -1,1362 +1,76 @@%0A-\n class To\n@@ -35,17 +35,19 @@\n    #this\n-%0A\n+%250A\n     def \n@@ -98,17 +98,19 @@\n structor\n-%0A\n+%250A\n         \n@@ -144,17 +144,19 @@\n tributos\n-%0A\n+%250A\n         \n@@ -176,17 +176,19 @@\n r = size\n-%0A\n+%250A\n         \n@@ -204,26 +204,30 @@\n ess: int = 0\n-%0A%0A\n+%250A%250A\n     def dry(\n@@ -246,24 +246,28 @@\n : int) -\n-%3E\n+%253E\n  None:\n-%0A\n+%250A\n         \n@@ -288,17 +288,19 @@\n = amount\n-%0A\n+%250A\n         \n@@ -315,17 +315,19 @@\n wetness \n-%3E\n+%253E\n = self.g\n@@ -341,17 +341,19 @@\n tness():\n-%0A\n+%250A\n         \n@@ -362,17 +362,19 @@\n   print(\n-%22\n+%2522\n toalha e\n@@ -382,19 +382,23 @@\n charcada\n-%22)%0A\n+%2522)%250A\n         \n@@ -436,18 +436,22 @@\n etness()\n-%0A%0A\n+%250A%250A\n     def \n@@ -467,16 +467,20 @@\n f) -\n-%3E\n+%253E\n  bool:\n-%0A\n+%250A\n     \n@@ -511,14 +511,18 @@\n == 0\n-%0A\n+%250A\n     \n-%0A\n+%250A\n     \n@@ -545,16 +545,20 @@\n f) -\n-%3E\n+%253E\n  None:\n-%0A\n+%250A\n     \n@@ -577,18 +577,22 @@\n ness = 0\n-%0A%0A\n+%250A%250A\n     def \n@@ -616,15 +616,19 @@\n f) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -651,13 +651,19 @@\n  == \n-%22P%22:%0A\n+%2522P%2522:%250A\n     \n@@ -679,17 +679,19 @@\n eturn 10\n-%0A\n+%250A\n         \n@@ -710,13 +710,19 @@\n  == \n-%22M%22:%0A\n+%2522M%2522:%250A\n     \n@@ -738,17 +738,19 @@\n eturn 20\n-%0A\n+%250A\n         \n@@ -769,13 +769,19 @@\n  == \n-%22G%22:%0A\n+%2522G%2522:%250A\n     \n@@ -797,17 +797,19 @@\n eturn 30\n-%0A\n+%250A\n         \n@@ -816,18 +816,22 @@\n return 0\n-%0A%0A\n+%250A%250A\n     def \n@@ -849,9 +849,11 @@\n f) -\n-%3E\n+%253E\n  str\n@@ -864,17 +864,19 @@\n toString\n-%0A\n+%250A\n         \n@@ -887,14 +887,18 @@\n rn f\n-%22\n+%2522\n Cor:\n-%7B\n+%257B\n self\n@@ -907,16 +907,20 @@\n olor\n-%7D\n+%257D\n , Tam:\n-%7B\n+%257B\n self\n@@ -924,17 +924,19 @@\n elf.size\n-%7D\n+%257D\n , Umidad\n@@ -941,9 +941,11 @@\n ade:\n-%7B\n+%257B\n self\n@@ -956,12 +956,20 @@\n ness\n-%7D%22%0A%0A\n+%257D%2522%250A%250A\n def \n@@ -975,17 +975,19 @@\n  main():\n-%0A\n+%250A\n     toal\n@@ -1001,16 +1001,26 @@\n wel(\n-%22%22, %22%22)%0A\n+%2522%2522, %2522%2522)%250A\n     \n@@ -1030,17 +1030,19 @@\n le True:\n-%0A\n+%250A\n         \n@@ -1060,17 +1060,19 @@\n  input()\n-%0A\n+%250A\n         \n@@ -1085,13 +1085,17 @@\n list\n-%5Bstr%5D\n+%255Bstr%255D\n  = l\n@@ -1108,13 +1108,19 @@\n lit(\n-%22 %22)%0A\n+%2522 %2522)%250A\n     \n@@ -1134,22 +1134,32 @@\n args\n-%5B0%5D == %22end%22:%0A\n+%255B0%255D == %2522end%2522:%250A\n     \n@@ -1171,17 +1171,19 @@\n    break\n-%0A\n+%250A\n         \n@@ -1195,22 +1195,32 @@\n args\n-%5B0%5D == %22new%22:%0A\n+%255B0%255D == %2522new%2522:%250A\n     \n@@ -1243,12 +1243,18 @@\n args\n-%5B1%5D%0A\n+%255B1%255D%250A\n     \n@@ -1276,12 +1276,18 @@\n args\n-%5B2%5D%0A\n+%255B2%255D%250A\n     \n@@ -1321,17 +1321,19 @@\n r, size)\n-%0A\n+%250A\n         \n@@ -1345,23 +1345,33 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n show\n-%22:%0A\n+%2522:%250A\n     \n@@ -1391,17 +1391,19 @@\n (toalha)\n-%0A\n+%250A\n         \n@@ -1415,22 +1415,32 @@\n args\n-%5B0%5D == %22dry%22:%0A\n+%255B0%255D == %2522dry%2522:%250A\n     \n@@ -1473,13 +1473,19 @@\n args\n-%5B1%5D)%0A\n+%255B1%255D)%250A\n     \n@@ -1510,17 +1510,19 @@\n (amount)\n-%0A\n+%250A\n         \n@@ -1526,17 +1526,19 @@\n    else:\n-%0A\n+%250A\n         \n@@ -1547,17 +1547,19 @@\n   print(\n-%22\n+%2522\n Comando \n@@ -1565,19 +1565,133 @@\n  inv\n-%C3%A1lido%22)%0A%0Amain()\n+%25C3%25A1lido%2522)%250A%250Amain()%0A+@@ -878,16 +878,32 @@%250A %252522%252522, %252522%252522)%25250A%250A+    print(%252522oi%252522)%25250A%250A     whil%250A%0A\n",
            "lines": "3"
        },
        {
            "label": "2025-09-29_16-20-03",
            "content": "@@ -1067,17 +1067,17 @@\n  = args%5B\n-2\n+1\n %5D%0A      \n@@ -1094,17 +1094,17 @@\n  = args%5B\n-3\n+2\n %5D%0A      \n",
            "lines": "50"
        },
        {
            "label": "2025-10-05_17-19-18",
            "content": "@@ -1067,17 +1067,17 @@\n  = args%5B\n-1\n+2\n %5D%0A      \n@@ -1086,33 +1086,33 @@\n     size = args%5B\n-2\n+3\n %5D%0A            to\n",
            "lines": "50"
        },
        {
            "label": "2025-10-05_17-19-43",
            "content": "class Towel:    #this\n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: # toString\n        return f\"Cor:{self.color}, Tam:{self.size}, Umidade:{self.wetness}\"\n\ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line: str = input()\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"new\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"Comando inv\u00e1lido\")\n\nmain()",
            "lines": "50"
        }
    ]
}